// https://usaco.org/index.php?page=viewproblem2&cpid=1208 
#include <iostream> 
#include <vector> 
#include <cstdio> 
#include <queue>  
using namespace std; 
// typedef long long ll; 
#define pii pair<int, int> 
#define ff first 
#define ss second 
#define mp make_pair 
int t, numEmails, numFolders, lenView; 
string res = ""; 
void solve() { 
    cin >> numFolders >> numEmails >> lenView; 
    int emailtoppointer = -1, emailbottompointer = -1, between = 1; 
    int foldertoppointer = 1, folderbottompointer = lenView;  
    vector<int> emails(numEmails + 1), numoftypeemail(numFolders + 1, 0); 
    vector<queue<int> > inWindow(numFolders + 1, queue<int>()); 
    vector<bool> filed(numEmails + 1, false); 
    for (int i = 0; i < numEmails; i++) {
        cin >> emails[i]; 
        numoftypeemail[emails[i]]++; 
    }
    while (emailbottompointer < numEmails - 1) { 
        if (emailtoppointer >= 0 && !filed[emailtoppointer]) {
            inWindow[emails[emailtoppointer]].pop(); 
        }
        emailtoppointer++; 
        while (filed[emailtoppointer]) {                    
            emailtoppointer++; 
        } 
        between--; 
        while (between < lenView && emailbottompointer < numEmails - 1) { 
            emailbottompointer++; 
            if (!filed[emailbottompointer] && foldertoppointer <= emails[emailbottompointer] && emails[emailbottompointer] <= folderbottompointer) {
                numoftypeemail[emails[emailbottompointer]]--; 
                filed[emailbottompointer] = true; 
            } 
            else { 
                inWindow[emails[emailbottompointer]].push(emailbottompointer); 
                between++; 
            }
            // while (emailbottompointer < numEmails && filed[emailbottompointer]) { 
            //     emailbottompointer++; 
            // } 
            // between++; 
        }
        while (numoftypeemail[foldertoppointer] == 0 && folderbottompointer < numFolders) {
            foldertoppointer++; 
            folderbottompointer++; 
            numoftypeemail[folderbottompointer] -= inWindow[folderbottompointer].size(); 
            while (!inWindow[folderbottompointer].empty()) {
                filed[inWindow[folderbottompointer].front()] = true; 
                inWindow[folderbottompointer].pop(); 
            }
            
        } 
        // cout << emailtoppointer << " " << emailbottompointer << endl; 
        // for (int i = 0; i < numEmails; i++) cout << filed[i] << " "; 
        // cout << endl << endl; 
        if (emailbottompointer - 1 == numEmails) break; 
    } 
    //go up the email list 
    // cout << "end " << emailtoppointer << " " << emailbottompointer << endl; 

    // cout << between << " " << emailtoppointer << " " << emailbottompointer << endl; 
    // for (int i = 0; i < numEmails; i++) cout << filed[i] << " "; 
    while (between < lenView && emailtoppointer > 0) { 
        emailtoppointer--; 
        while (emailtoppointer > 0 && filed[emailtoppointer]) emailtoppointer--; 
        if (emailtoppointer == 0 && filed[emailtoppointer]) break; 
        if (!filed[emailtoppointer] && foldertoppointer <= emails[emailtoppointer] && emails[emailtoppointer] <= folderbottompointer) {
            numoftypeemail[emails[emailtoppointer]]--; 
            filed[emailtoppointer] = true; 
        } 
        else {
            inWindow[emails[emailtoppointer]].push(emailtoppointer); 
            between++; 
        } 
    } 
    // for (int i = 0; i < numEmails; i++) {
    //     cout << filed[i] << " "; 
    // } 
    // cout << endl; 
    
    while (emailtoppointer >= 0 && !filed[emailtoppointer]) { 
        if (!filed[emailtoppointer] && foldertoppointer <= emails[emailtoppointer] && emails[emailtoppointer] <= folderbottompointer) {
            numoftypeemail[emails[emailtoppointer]]--; 
            filed[emailtoppointer] = true; 
        } 
        else if (!filed[emailtoppointer]) {
            res += "NO\n"; 
            return; 
        } 
        while (numoftypeemail[foldertoppointer] == 0 && folderbottompointer < numFolders) {
            foldertoppointer++; 
            folderbottompointer++; 
            numoftypeemail[folderbottompointer] -= inWindow[folderbottompointer].size(); 
            while (!inWindow[folderbottompointer].empty()) {
                filed[inWindow[folderbottompointer].front()] = true; 
                inWindow[folderbottompointer].pop(); 
            }
            
        }


        
        emailtoppointer--; 
        while (emailtoppointer > 0 && filed[emailtoppointer]) emailtoppointer--; 
    } 
    for (int i = 0; i < numEmails; i++) {
        if (!filed[i]) {
            res += "NO\n"; 
            return; 
        }
    } 
    res += "YES\n"; 
}
int main() { 
    // freopen("circular.in", "r", stdin); 
    // freopen("circular.out", "w", stdout); 
    cin >> t; 
    while (t--) solve(); 
    cout << res; 
} 
/* 
5 5 1
1 2 3 4 5
5 5 1
1 2 3 5 4
5 5 1
1 2 4 5 3
5 5 2
1 2 4 5 3
3 10 2
1 3 2 1 3 2 1 3 2 1
3 10 1
1 3 2 1 3 2 1 3 2 1 
*/
